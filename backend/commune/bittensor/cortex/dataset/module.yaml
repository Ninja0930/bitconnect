module: 'DatasetModule'

client: [local]


# submodule:
#   queue: 
#     module: ray.server.queue.QueueServer
#     actor : {refresh: False}

queue: 
  module: ray.server.queue
  actor : {'refresh': False}

dataset:
  module: huggingface.dataset
  actor: {'refresh': False}
  wrap: True

num_endpoints: 50

synapses: ['TextLastHiddenState']

bitmodule:
  module: bittensor.base.module.BitModule
  actor: {'refresh': False}
  kwargs:
    override:
      wallet: 
        name: const
        hotkey: Tiberius
      network: nakamoto
  wrap: True

receptor_pool:
  module: bittensor.receptor.pool
  kwargs:
    max_worker_threads: 0
    max_active_receptors: 0
  
  actor: {'refresh': False}
  wrap: True
  memory_threshold:
    value: 0.1
    mode: ratio


# network: nobunaga
network: nakamoto
block: null
blocks_behind_sync_threshold: 1000


wallet: 
  name: const
  hotkey: Tiberius


actor:
  name: local_copy(module)
  refresh: False
  resources: {num_cpus: 1.0}

