module: 'CortexModule'

client: {}


dataset:
  path: datasets.load_dataset
  params:
    path: glue
    name: cola
    split: test
  text_field: 'sentence'
  

tokenizer:
  path: bittensor.tokenizer
  params:
    version: null

num_endpoints: 100

model:
  path: commune.bittensor.cortex.model.RankingModel
  params:
    num_endpoints: local_copy(num_endpoints)

synapses: ['TextCausalLM']


receptor_pool:
  max_worker_threads: 64
  max_active_receptors: 512


optimizer:
  path: torch.optim.Adam
  params:
    lr: 0.00032

metric:
  ranking_loss:
    path: commune.bittensor.cortex.metric.RankingLoss
    params: {}
  causal_lm_loss:
    path: commune.bittensor.cortex.metric.causal_lm_loss
    params: {}
  cross_entropy:
    path: torch.nn.CrossEntropyLoss
    params: {}

network: nakamoto
block: null
blocks_behind_sync_threshold: 1000

wallet: 
  name: const
  hotkey: Tiberius

actor:
  name: local_copy(module)
  refresh: False