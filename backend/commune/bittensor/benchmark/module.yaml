module: 'BenchmarkModule'
# clients
# client: get_config(client.manager)

client: {}
# dataset:
#   path: bittensor.dataset
#   params:
#     block_size: 10

dataset:
  path: datasets.load_dataset
  params:
    path: glue
    name: cola
    split: test
  text_field: 'sentence'
  

tokenizer:
  path: bittensor.tokenizer
  params:
    version: null

num_endpoints: 100

model:
  path: commune.bittensor.benchmark.model.RankingModel
  params:
    num_endpoints: local_copy(num_endpoints)

synapses: ['TextLastHiddenState']

optimizer:
  path: torch.optim.Adam
  params:
    lr: 0.00032

metric:
  path: commune.bittensor.benchmark.model.RankingLoss
  params: {}


receptor_pool:
  max_worker_threads: 64
  max_active_receptors: 512

network: nobunaga
# network: nakamoto
block: null
blocks_behind_sync_threshold: 1000


# wallet: 
#   name: const
#   hotkey: Tiberius

wallet: 
  name: default
  hotkey: default

actor:
  name: local_copy(module)
  refresh: False
